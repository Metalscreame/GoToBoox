// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/metalscreame/GoToBoox/src/dataBase/repository (interfaces: TagsRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	repository "github.com/metalscreame/GoToBoox/src/dataBase/repository"
	reflect "reflect"
)

// MockTagsRepository is a mock of TagsRepository interface
type MockTagsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTagsRepositoryMockRecorder
}

// MockTagsRepositoryMockRecorder is the mock recorder for MockTagsRepository
type MockTagsRepositoryMockRecorder struct {
	mock *MockTagsRepository
}

// NewMockTagsRepository creates a new mock instance
func NewMockTagsRepository(ctrl *gomock.Controller) *MockTagsRepository {
	mock := &MockTagsRepository{ctrl: ctrl}
	mock.recorder = &MockTagsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTagsRepository) EXPECT() *MockTagsRepositoryMockRecorder {
	return m.recorder
}

// GetListOfTags mocks base method
func (m *MockTagsRepository) GetListOfTags() ([]repository.Tags, error) {
	ret := m.ctrl.Call(m, "GetListOfTags")
	ret0, _ := ret[0].([]repository.Tags)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetListOfTags indicates an expected call of GetListOfTags
func (mr *MockTagsRepositoryMockRecorder) GetListOfTags() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListOfTags", reflect.TypeOf((*MockTagsRepository)(nil).GetListOfTags))
}
